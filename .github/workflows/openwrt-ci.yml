#
# This is free software, lisence use MIT.
# 
# Copyright (C) 2019 P3TERX <https://p3terx.com>
# Copyright (C) 2019 KFERMercer <KFER.Mercer@gmail.com>
# 
# <https://github.com/KFERMercer/OpenWrt-CI>
# 

# name: OpenWrt-CI

# on:
#   schedule:
#     - cron: 0 18 * * *
#   release:
#     types: [published]
# #   push:
# #     branches: 
# #       - master

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout
#         uses: actions/checkout@master
#         with:
#           ref: master

#       - name: Initialization environment
#         env:
#           DEBIAN_FRONTEND: noninteractive
#         run: |
#           docker rmi `docker images -q`
#           sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
#           sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
#           sudo -E apt-get update
#           sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
#           sudo -E apt-get -y autoremove --purge
#           sudo -E apt-get clean
          
#           # 利用挂载在 /mnt/ 的 14G 额外空间:
#           # sudo mkdir -p -m 777 /mnt/openwrt/bin /mnt/openwrt/build_dir/host /mnt/openwrt/build_dir/hostpkg /mnt/openwrt/dl /mnt/openwrt/feeds /mnt/openwrt/staging_dir
#           # ln -s /mnt/openwrt/bin ./bin
#           # mkdir -p ./build_dir/host && ln -s /mnt/openwrt/build_dir/host ./build_dir/host
#           # mkdir -p ./build_dir/host && ln -s /mnt/openwrt/build_dir/hostpkg ./build_dir/hostpkg
#           # ln -s /mnt/openwrt/dl ./dl
#           # ln -s /mnt/openwrt/feeds ./feeds
#           # ln -s /mnt/openwrt/staging_dir ./staging_dir
          
#           df -h

#       - name: Set git identity
#         run : |
#           git config --global user.email "neikvon@gmail.com"
#           git config --global user.name "neikvon"

#       - name: AddsOn
#         run: |
#           cd package
#           mkdir openwrt-packages
#           cd openwrt-packages
#           git clone https://github.com/rufengsuixing/luci-app-adguardhome.git

#       - name: Update feeds
#         run: |
#           ./scripts/feeds update -a
#           ./scripts/feeds install -a

#       - name: Custom configure file
#         env:
#           DIY_SH: 'diy.sh'
#         run: |
#           rm -f ./.config*
#           touch ./.config

#           #
#           # ========================固件定制部分========================
#           # 

#           # 编译x64固件:
#           cat >> .config <<EOF
#           CONFIG_TARGET_x86=y
#           CONFIG_TARGET_x86_64=y
#           CONFIG_TARGET_x86_64_Generic=y
#           EOF

#           # 编译UEFI固件:
#           #cat >> .config <<EOF
#           #CONFIG_EFI_IMAGES=y
#           #EOF

#           # IPv6支持:
#           cat >> .config <<EOF
#           CONFIG_PACKAGE_dnsmasq_full_dhcpv6=y
#           CONFIG_PACKAGE_ipv6helper=y
#           EOF

#           # 多文件系统支持:
#           cat >> .config <<EOF
#           CONFIG_PACKAGE_kmod-fs-nfs=y
#           CONFIG_PACKAGE_kmod-fs-nfs-common=y
#           CONFIG_PACKAGE_kmod-fs-nfs-v3=y
#           CONFIG_PACKAGE_kmod-fs-nfs-v4=y
#           CONFIG_PACKAGE_kmod-fs-ntfs=y
#           CONFIG_PACKAGE_kmod-fs-squashfs=y
#           EOF

#           # 常用LuCI插件选择:
#           cat >> .config <<EOF
#           CONFIG_PACKAGE_luci-app-accesscontrol=y
#           CONFIG_PACKAGE_luci-app-adbyby-plus=y
#           CONFIG_PACKAGE_luci-app-netdata=y
#           CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Kcptun=y
#           CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Shadowsocks=y
#           CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_ShadowsocksR_Server=y
#           CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_ShadowsocksR_Socks=y
#           CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_V2ray=y
#           CONFIG_PACKAGE_luci-app-wireguard=y
#           CONFIG_PACKAGE_luci-app-wrtbwmon=y
#           CONFIG_PACKAGE_luci-app-adguardhome=y
#           CONFIG_PACKAGE_luci-app-frpc=y # 内网穿透 Frp
#           EOF

#           # LuCI主题:
#           cat >> .config <<EOF
#           CONFIG_PACKAGE_luci-theme-argon=y
#           EOF

#           # 常用软件包:
#           cat >> .config <<EOF
#           CONFIG_PACKAGE_curl=y
#           CONFIG_PACKAGE_htop=y
#           CONFIG_PACKAGE_wget=y
#           CONFIG_PACKAGE_diffutils=y
#           EOF

#           # 取消编译VMware镜像以及镜像填充 (不要删除被缩进的注释符号):
#           cat >> .config <<EOF
#           # CONFIG_TARGET_IMAGES_PAD is not set
#           # CONFIG_VMDK_IMAGES is not set
#           EOF

#           # 
#           # ========================固件定制部分结束========================
#           # 
          
#           chmod +x $DIY_SH
#           ./$DIY_SH
#           sed -i 's/^[ \t]*//g' ./.config
#           make defconfig

#       - name: Make download
#         run: |
#           make download -j8
#           find dl -size -1024c -exec rm -f {} \;
#           df -h

#       - name: Compile firmware
#         run: |
#           make -j$(nproc) || make -j1 V=s
#           echo "======================="
#           echo "Space usage:"
#           echo "======================="
#           df -h
#           echo "======================="
#           du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
#           du -h --max-depth=1 ./build_dir
#           du -h --max-depth=1 ./bin

#       - name: Prepare artifact
#         run: find ./bin/targets/ -type d -name "packages" | xargs rm -rf {}

#       - name: Upload artifact
#         uses: actions/upload-artifact@master
#         with:
#           name: OpenWrt firmware
#           path: ./bin/targets/
